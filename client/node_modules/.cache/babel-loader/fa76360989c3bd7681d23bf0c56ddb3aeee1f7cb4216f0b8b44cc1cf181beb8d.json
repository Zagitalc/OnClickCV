{"ast":null,"code":"var _jsxFileName = \"/Users/longhchung/Documents/GitHub/OnClickCV/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CVForm from \"./components/CVForm\";\nimport CVPreview from \"./components/CVPreview\";\nimport \"./index.css\";\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cvData, setCvData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    linkedin: \"\",\n    summary: \"\",\n    workExperience: [],\n    volunteerExperience: [],\n    education: [],\n    skills: [],\n    projects: [],\n    certifications: [],\n    awards: [],\n    interests: \"\"\n  });\n  const [template, setTemplate] = useState(\"A\");\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportError, setExportError] = useState(null);\n  const handleExport = async format => {\n    setIsExporting(true);\n    setExportError(null);\n    try {\n      const endpoint = `http://localhost:4000/api/export/${format}`;\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cvData,\n          template\n        })\n      });\n      if (!response.ok) throw new Error(`${format.toUpperCase()} export failed`);\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = `OnClickCV.${format === 'pdf' ? 'pdf' : 'docx'}`;\n      link.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(error);\n      setExportError(`Failed to export ${format.toUpperCase()}: ${error.message}`);\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"w-full py-6 border-b bg-white mb-8\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center tracking-tight\",\n        children: \"OnClickCV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"my-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col lg:flex-row gap-8 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full lg:w-1/2 bg-white rounded-lg shadow p-6 mb-8 lg:mb-0\",\n          children: /*#__PURE__*/_jsxDEV(CVForm, {\n            cvData: cvData,\n            setCvData: setCvData,\n            template: template,\n            setTemplate: setTemplate,\n            onExport: handleExport,\n            isExporting: isExporting,\n            exportError: exportError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full lg:w-1/2 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"a4-preview\",\n              children: /*#__PURE__*/_jsxDEV(CVPreview, {\n                cvData: cvData,\n                template: template\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/AXnFVHYDZValZfsBLZ96BLPPR8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CVForm","CVPreview","jsxDEV","_jsxDEV","App","_s","cvData","setCvData","name","email","phone","linkedin","summary","workExperience","volunteerExperience","education","skills","projects","certifications","awards","interests","template","setTemplate","isExporting","setIsExporting","exportError","setExportError","handleExport","format","endpoint","response","fetch","method","headers","body","JSON","stringify","ok","Error","toUpperCase","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onExport","_c","$RefreshReg$"],"sources":["/Users/longhchung/Documents/GitHub/OnClickCV/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport CVForm from \"./components/CVForm\";\nimport CVPreview from \"./components/CVPreview\";\nimport \"./index.css\";\nimport 'react-quill/dist/quill.snow.css';\n\nfunction App() {\n    const [cvData, setCvData] = useState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        linkedin: \"\",\n        summary: \"\",\n        workExperience: [],\n        volunteerExperience: [],\n        education: [],\n        skills: [],\n        projects: [],\n        certifications: [],\n        awards: [],\n        interests: \"\"\n    });\n\n    const [template, setTemplate] = useState(\"A\");\n    const [isExporting, setIsExporting] = useState(false);\n    const [exportError, setExportError] = useState(null);\n\n    const handleExport = async (format) => {\n        setIsExporting(true);\n        setExportError(null);\n\n        try {\n            const endpoint = `http://localhost:4000/api/export/${format}`;\n            const response = await fetch(endpoint, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ cvData, template })\n            });\n\n            if (!response.ok) throw new Error(`${format.toUpperCase()} export failed`);\n\n            const blob = await response.blob();\n            const url = window.URL.createObjectURL(blob);\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.download = `OnClickCV.${format === 'pdf' ? 'pdf' : 'docx'}`;\n            link.click();\n            window.URL.revokeObjectURL(url);\n        } catch (error) {\n            console.error(error);\n            setExportError(`Failed to export ${format.toUpperCase()}: ${error.message}`);\n        } finally {\n            setIsExporting(false);\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-gray-50\">\n            <header className=\"w-full py-6 border-b bg-white mb-8\">\n                <h1 className=\"text-3xl font-bold text-center tracking-tight\">OnClickCV</h1>\n            </header>\n            <main className=\"my-container\">\n                <div className=\"flex flex-col lg:flex-row gap-8 w-full\">\n                    <div className=\"w-full lg:w-1/2 bg-white rounded-lg shadow p-6 mb-8 lg:mb-0\">\n                        <CVForm\n                            cvData={cvData}\n                            setCvData={setCvData}\n                            template={template}\n                            setTemplate={setTemplate}\n                            onExport={handleExport}\n                            isExporting={isExporting}\n                            exportError={exportError}\n                        />\n                    </div>\n                    <div className=\"w-full lg:w-1/2 flex items-center justify-center\">\n                        <div className=\"w-full\">\n                            <div className=\"a4-preview\">\n                                <CVPreview cvData={cvData} template={template} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,aAAa;AACpB,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IACjCS,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,EAAE;IAClBC,mBAAmB,EAAE,EAAE;IACvBC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,cAAc,EAAE,EAAE;IAClBC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM4B,YAAY,GAAG,MAAOC,MAAM,IAAK;IACnCJ,cAAc,CAAC,IAAI,CAAC;IACpBE,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACA,MAAMG,QAAQ,GAAG,oCAAoCD,MAAM,EAAE;MAC7D,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,EAAE;QACnCG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE9B,MAAM;UAAEe;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,GAAGV,MAAM,CAACW,WAAW,CAAC,CAAC,gBAAgB,CAAC;MAE1E,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAC5C,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,QAAQ,GAAG,aAAarB,MAAM,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM,EAAE;MAChEiB,IAAI,CAACK,KAAK,CAAC,CAAC;MACZR,MAAM,CAACC,GAAG,CAACQ,eAAe,CAACV,GAAG,CAAC;IACnC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB1B,cAAc,CAAC,oBAAoBE,MAAM,CAACW,WAAW,CAAC,CAAC,KAAKa,KAAK,CAACE,OAAO,EAAE,CAAC;IAChF,CAAC,SAAS;MACN9B,cAAc,CAAC,KAAK,CAAC;IACzB;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAKoD,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCrD,OAAA;MAAQoD,SAAS,EAAC,oCAAoC;MAAAC,QAAA,eAClDrD,OAAA;QAAIoD,SAAS,EAAC,+CAA+C;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACTzD,OAAA;MAAMoD,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC1BrD,OAAA;QAAKoD,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACnDrD,OAAA;UAAKoD,SAAS,EAAC,6DAA6D;UAAAC,QAAA,eACxErD,OAAA,CAACH,MAAM;YACHM,MAAM,EAAEA,MAAO;YACfC,SAAS,EAAEA,SAAU;YACrBc,QAAQ,EAAEA,QAAS;YACnBC,WAAW,EAAEA,WAAY;YACzBuC,QAAQ,EAAElC,YAAa;YACvBJ,WAAW,EAAEA,WAAY;YACzBE,WAAW,EAAEA;UAAY;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNzD,OAAA;UAAKoD,SAAS,EAAC,kDAAkD;UAAAC,QAAA,eAC7DrD,OAAA;YAAKoD,SAAS,EAAC,QAAQ;YAAAC,QAAA,eACnBrD,OAAA;cAAKoD,SAAS,EAAC,YAAY;cAAAC,QAAA,eACvBrD,OAAA,CAACF,SAAS;gBAACK,MAAM,EAAEA,MAAO;gBAACe,QAAQ,EAAEA;cAAS;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACvD,EAAA,CA/EQD,GAAG;AAAA0D,EAAA,GAAH1D,GAAG;AAiFZ,eAAeA,GAAG;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}